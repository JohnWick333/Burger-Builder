{"version":3,"sources":["webpack:///./src/components/UI/input/Input.js","webpack:///./src/components/Order/CheckoutSummary/CheckoutSummary.js","webpack:///./src/Containers/Checkout/ContactData/ContactData.js","webpack:///./src/Containers/Checkout/Checkout.js"],"names":["__webpack_exports__","props","inputElement","inputClasses","invalid","shouldValidate","touched","push","elementType","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_extends","className","join","elementConfig","value","onChange","changed","options","map","option","key","displayValue","label","CheckoutSummary_CheckoutSummary","react_default","style","width","margin","Burger","ingredient","Button","btnType","clicked","CancelHandler","ContinueHandler","ContactData","orderForm","name","type","placeholder","validation","required","valid","street","postalCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","loading","event","preventDefault","formData","data","_this","state","orders","price","orderData","userId","onOrderBurger","token","rules","isValid","trim","length","formElement","updatedOrderForm","_objectSpread","updatedFormElement","target","checkValidity","identifier","setState","Component","_this2","this","fromElementsArray","id","config","form","onSubmit","OrderHandler","Input","inputChangedHandler","disabled","Spinner","connect","burgerReducer","totalPrice","orderReducer","authReducer","dispatch","actions","withErrorHandler","axios","Checkout","history","goBack","replace","summary","Redirect","to","purchaseRedirect","purchased","Route","path","match","component","ingredients"],"mappings":"kUAEeA,EAAA,WAACC,GACZ,IAAIC,EAAa,KACXC,EAAa,CAAC,gBAKpB,OAHGF,EAAMG,SAAWH,EAAMI,gBAAkBJ,EAAMK,SAC9CH,EAAaI,KAAK,WAEfN,EAAMO,aACT,IAAK,QACDN,EAAaO,EAAAC,EAAAC,cAAA,QAAAC,EAAA,CACRC,UAAWV,EAAaW,KAAK,MACzBb,EAAMc,cAFF,CAGRC,MAAOf,EAAMe,MACbC,SAAUhB,EAAMiB,WACrB,MACJ,IAAK,WACDhB,EAAaO,EAAAC,EAAAC,cAAA,WAAAC,EAAA,CACTC,UAAWV,EAAaW,KAAK,MACzBb,EAAMc,cAFD,CAGTC,MAAOf,EAAMe,MACZC,SAAUhB,EAAMiB,WACrB,MACJ,IAAK,SACDhB,EAAcO,EAAAC,EAAAC,cAAA,UACVE,UAAWV,EAAaW,KAAK,KAC7BE,MAAOf,EAAMe,MACbC,SAAUhB,EAAMiB,SAEfjB,EAAMc,cAAcI,QAAQC,IAAI,SAAAC,GAAM,OACnCZ,EAAAC,EAAAC,cAAA,UAAQW,IAAKD,EAAOL,MAAOA,MAAOK,EAAOL,OACpCK,EAAOE,iBAKpB,MACJ,QACIrB,EAAaO,EAAAC,EAAAC,cAAA,QAAAC,EAAA,CACTC,UAAWV,EAAaW,KAAK,MACzBb,EAAMc,cAFD,CAGTC,MAAOf,EAAMe,MACbC,SAAUhB,EAAMiB,WAG5B,OACIT,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACXJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,SAASZ,EAAMuB,OAC/BtB,oKC3CEuB,SAAA,SAACxB,GACR,OACIyB,EAAAhB,EAAAC,cAAA,OAAKE,UAAU,mBAEXa,EAAAhB,EAAAC,cAAA,iCAEAe,EAAAhB,EAAAC,cAAA,OAAMgB,MAAO,CAACC,MAAM,OAAOC,OAAO,SAC9BH,EAAAhB,EAAAC,cAACmB,EAAA,EAAD,CAAQC,WAAY9B,EAAM8B,cAG9BL,EAAAhB,EAAAC,cAACqB,EAAA,EAAD,CAAQC,QAAQ,SAASC,QAASjC,EAAMkC,eAAeT,EAAAhB,EAAAC,cAAA,oBAEvDe,EAAAhB,EAAAC,cAACqB,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAASjC,EAAMmC,iBAAiBV,EAAAhB,EAAAC,cAAA,kvCCNpE0B,+UACI,CACHC,UAAU,CACNC,KAAK,CACA/B,YAAY,QACZO,cAAc,CACVyB,KAAK,OACLC,YAAY,aAEhBzB,MAAM,GACN0B,WAAW,CACPC,UAAS,GAEbC,OAAM,EACNtC,SAAQ,GAGZuC,OAAO,CACHrC,YAAY,QACZO,cAAc,CACVyB,KAAK,OACLC,YAAY,UAEhBzB,MAAM,GACN0B,WAAW,CACPC,UAAS,GAEbC,OAAM,EACNtC,SAAQ,GAEZwC,WAAW,CACPtC,YAAY,QACZO,cAAc,CACVyB,KAAK,OACLC,YAAY,eAEhBzB,MAAM,GACN0B,WAAW,CACPC,UAAS,EACTI,UAAU,EACVC,UAAU,GAEdJ,OAAM,EACNtC,SAAQ,GAGZ2C,QAAQ,CACJzC,YAAY,QACZO,cAAc,CACVyB,KAAK,OACLC,YAAY,WAEhBzB,MAAM,GACN0B,WAAW,CACPC,UAAS,GAEbC,OAAM,EACNtC,SAAQ,GAEZ4C,MAAM,CACF1C,YAAY,QACZO,cAAc,CACVyB,KAAK,QACLC,YAAY,UAEhBzB,MAAM,GACN0B,WAAW,CACPC,UAAS,GAEbC,OAAM,EACNtC,SAAQ,GAEZ6C,eAAe,CACX3C,YAAY,SACZO,cAAc,CACXI,QAAQ,CACJ,CAACH,MAAO,UAAYO,aAAa,WACjC,CAACP,MAAO,WAAaO,aAAc,cAG1CP,MAAM,UACN0B,WAAW,GACXE,OAAM,IAKXQ,aAAY,EACZC,SAAQ,0BAKF,SAACC,GACVA,EAAMC,iBACN,IAAMC,EAAS,GACd,IAAI,IAAIC,KAAQC,EAAKC,MAAMrB,UACvBkB,EAASC,GAAMC,EAAKC,MAAMrB,UAAUmB,GAAMzC,MAI/C,IAAM4C,EAAO,CACL7B,WAAW2B,EAAKzD,MAAM8B,WACtB8B,MAAMH,EAAKzD,MAAM4D,MACjBC,UAAUN,EACVO,OAAOL,EAAKzD,MAAM8D,QAI1BL,EAAKzD,MAAM+D,cAAcN,EAAKzD,MAAMgE,MAAML,4BAKhC,SAAC5C,EAAMkD,GACjB,IAAIC,GAAQ,EAWZ,OAVGD,EAAMvB,WACLwB,EAAuB,KAAfnD,EAAMoD,QAAeD,GAE9BD,EAAMnB,YACLoB,EAAQnD,EAAMqD,QAAUH,EAAMnB,WAAaoB,GAE5CD,EAAMlB,YACLmB,EAAQnD,EAAMqD,QAAUH,EAAMlB,WAAamB,GAGxCA,iCAGS,SAACb,EAAMgB,GACvBhB,EAAMC,iBAEN,IAAMgB,EAAgBC,EAAA,GAAKd,EAAKC,MAAMrB,WAChCmC,EAAkBD,EAAA,GAAKD,EAAiBD,IAC9CG,EAAmBzD,MAAMsC,EAAMoB,OAAO1D,MAEtCyD,EAAmB7B,MAAMc,EAAKiB,cAAcF,EAAmBzD,MAAMyD,EAAmB/B,YACxF+B,EAAmBnE,SAAQ,EAE3B,IAAI8C,GAAY,EAEhB,IAAI,IAAIwB,KAAeL,EACnBnB,EAAYmB,EAAiBK,GAAYhC,OAASQ,EAGtDmB,EAAiBD,GAAaG,EAC9Bf,EAAKmB,SAAS,CAACvC,UAAUiC,EAAkBnB,0QAlJzB0B,uDAqJd,IAAAC,EAAAC,KAEEC,EAAkB,GACxB,IAAI,IAAI3D,KAAO0D,KAAKrB,MAAMrB,UACtB2C,EAAkB1E,KAAK,CACnB2E,GAAG5D,EACH6D,OAAQH,KAAKrB,MAAMrB,UAAUhB,KAGrC,IAAI8D,EACA1D,EAAAhB,EAAAC,cAAA,QAAM0E,SAAUL,KAAKM,cACbL,EAAkB7D,IAAI,SAACkD,GAAD,OACnB5C,EAAAhB,EAAAC,cAAC4E,EAAA,EAAD,CACKjE,IAAKgD,EAAYY,GACjB1E,YAAa8D,EAAYa,OAAO3E,YAChCO,cAAeuD,EAAYa,OAAOpE,cAClCC,MAAOsD,EAAYa,OAAOnE,MAC1BZ,SAAUkE,EAAYa,OAAOvC,MAC7BtC,QAASgE,EAAYa,OAAO7E,QAC5BD,eAAgBiE,EAAYa,OAAOzC,WACnCxB,QAAS,kBAAI6D,EAAKS,oBAAoBlC,MAAMgB,EAAYY,SAGhExD,EAAAhB,EAAAC,cAACqB,EAAA,EAAD,CAAQC,QAAQ,UAAUwD,UAAWT,KAAKrB,MAAMP,aAAa1B,EAAAhB,EAAAC,cAAA,oBAMzE,OAHGqE,KAAK/E,MAAMoD,UACV+B,EAAK1D,EAAAhB,EAAAC,cAAC+E,EAAA,EAAD,OAILhE,EAAAhB,EAAAC,cAAA,OAAKE,UAAU,eAEXa,EAAAhB,EAAAC,cAAA,kEACCyE,wCAuBFO,cAfO,SAAAhC,GAClB,MAAO,CACH5B,WAAW4B,EAAMiC,cAAc7D,WAC/B8B,MAAMF,EAAMiC,cAAcC,WAC1BxC,QAAQM,EAAMmC,aAAazC,QAC3BY,MAAMN,EAAMoC,YAAY9B,MACxBF,OAAOJ,EAAMoC,YAAYhC,SAGP,SAACiC,GACvB,MAAM,CACFhC,cAAc,SAACC,EAAMH,GAAP,OAAmBkC,EAASC,IAAuBhC,EAAMH,OAIhE6B,CAA4CO,YAAiB7D,EAAY8D,23BClNlFC,uVAEa,WACV1C,EAAKzD,MAAMoG,QAAQC,oCAEP,WACb5C,EAAKzD,MAAMoG,QAAQE,QAAQ,oRANZzB,uDASlB,IAAI0B,EAAU9E,EAAAhB,EAAAC,cAAC8F,EAAA,EAAD,CAAUC,GAAG,MAC3B,GAAG1B,KAAK/E,MAAM8B,WAAW,CACrB,IAAM4E,EAAiB3B,KAAK/E,MAAM2G,UAAUlF,EAAAhB,EAAAC,cAAC8F,EAAA,EAAD,CAAUC,GAAG,MAAM,KAC/DF,EACG9E,EAAAhB,EAAAC,cAAA,OAAKE,UAAU,YACN8F,EACDjF,EAAAhB,EAAAC,cAACc,EAAD,CACIM,WAAYiD,KAAK/E,MAAM8B,WACvBI,cAAe6C,KAAK7C,cACpBC,gBAAiB4C,KAAK5C,kBAEtBV,EAAAhB,EAAAC,cAACkG,EAAA,EAAD,CACAC,KAAM9B,KAAK/E,MAAM8G,MAAMD,KAAO,gBAC9BE,UAAW3E,KAM9B,OACIX,EAAAhB,EAAAC,cAAA,WACI6F,wCAeEb,sBARO,SAAAhC,GAClB,MAAM,CACF5B,WAAW4B,EAAMiC,cAAcqB,YAC/BhH,MAAM0D,EAAMiC,cAAcC,WAC1Be,UAAUjD,EAAMmC,aAAac,YAItBjB,CAA0BS","file":"1.bundle.js","sourcesContent":["import React from \"react\"\r\nimport \"../../../styles/componenets/Input.css\"\r\nexport default (props)=>{\r\n    let inputElement=null\r\n    const inputClasses=[\"InputElement\"];\r\n\r\n    if(props.invalid && props.shouldValidate && props.touched){\r\n        inputClasses.push(\"Invalid\")\r\n    }\r\n    switch(props.elementType){\r\n        case(\"input\"):\r\n            inputElement=<input\r\n                 className={inputClasses.join(\" \")}\r\n                 {...props.elementConfig} \r\n                 value={props.value}\r\n                 onChange={props.changed}/>\r\n            break;\r\n        case(\"textarea\"):\r\n            inputElement=<textarea \r\n                className={inputClasses.join(\" \")}\r\n                {...props.elementConfig}  \r\n                value={props.value}\r\n                 onChange={props.changed}/>\r\n            break;\r\n        case(\"select\"):\r\n            inputElement=(<select\r\n                className={inputClasses.join(\" \")}\r\n                value={props.value} \r\n                onChange={props.changed}>\r\n                                            \r\n                {props.elementConfig.options.map(option=>(\r\n                    <option key={option.value} value={option.value}>\r\n                        {option.displayValue}\r\n                    </option>\r\n                 ))}\r\n                 \r\n                </select>)\r\n            break;\r\n        default:\r\n            inputElement=<input \r\n                className={inputClasses.join(\" \")}\r\n                {...props.elementConfig}  \r\n                value={props.value} \r\n                onChange={props.changed}/>\r\n    }\r\n\r\n    return(\r\n        <div className=\"Input\">\r\n            <label className=\"Label\">{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport Burger from \"../../Burger/Burger\"\r\nimport Button from \"../../UI/Button/Button\"\r\nimport \"../../../styles/componenets/CheckoutSummary.css\"\r\n\r\n\r\nexport default (props)=>{\r\n        return(\r\n            <div className=\"CheckoutSummary\">\r\n\r\n                <h1>Hope it tastes well</h1>\r\n\r\n                <div  style={{width:\"100%\",margin:'auto'}}>\r\n                    <Burger ingredient={props.ingredient}/>\r\n                </div>\r\n                \r\n                <Button btnType=\"Danger\" clicked={props.CancelHandler}><b>CANCEL</b></Button>\r\n\r\n                <Button btnType=\"Success\" clicked={props.ContinueHandler}><b>CONTINUE</b></Button>\r\n            </div>\r\n        )\r\n\r\n}","import React,{Component} from \"react\"\r\nimport Button from \"../../../components/UI/Button/Button\"\r\nimport \"../../../styles/componenets/ContactData.css\"\r\nimport axios from '../../../axios-order'\r\nimport Spinner from \"../../../components/UI/Spinner\"\r\nimport Input from \"../../../components/UI/input/Input\"\r\nimport {connect} from \"react-redux\"\r\nimport withErrorHandler from \"../../../Hoc/WithErrorHandler\"\r\nimport *as actions from \"../../../store/Actions/index\"\r\n\r\n\r\n\r\nclass ContactData extends Component{\r\n    state={\r\n       orderForm:{\r\n           name:{\r\n                elementType:\"input\",\r\n                elementConfig:{\r\n                    type:\"text\",\r\n                    placeholder:\"your name\"\r\n                },\r\n                value:\"\",\r\n                validation:{\r\n                    required:true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            \r\n            street:{\r\n                elementType:\"input\",\r\n                elementConfig:{\r\n                    type:\"text\",\r\n                    placeholder:\"street\"\r\n                },\r\n                value:\"\",\r\n                validation:{\r\n                    required:true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            postalCode:{\r\n                elementType:\"input\",\r\n                elementConfig:{\r\n                    type:\"text\",\r\n                    placeholder:\"postal code\"\r\n                },\r\n                value:\"\",\r\n                validation:{\r\n                    required:true,\r\n                    minLength:5,\r\n                    maxLength:5\r\n                },\r\n                valid:false,\r\n                touched:false\r\n\r\n            },\r\n            country:{\r\n                elementType:\"input\",\r\n                elementConfig:{\r\n                    type:\"text\",\r\n                    placeholder:\"country\"\r\n                },\r\n                value:\"\",\r\n                validation:{\r\n                    required:true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            email:{\r\n                elementType:\"input\",\r\n                elementConfig:{\r\n                    type:\"email\",\r\n                    placeholder:\"E-mail\"\r\n                },\r\n                value:\"\",\r\n                validation:{\r\n                    required:true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            deliveryMethod:{\r\n                elementType:\"select\",\r\n                elementConfig:{\r\n                   options:[\r\n                       {value: 'fastest' , displayValue:'Fastest'},\r\n                       {value: 'cheapest' , displayValue: 'Cheapest'}\r\n                   ]\r\n                },\r\n                value:\"fastest\",\r\n                validation:{},\r\n                valid:true\r\n            }\r\n\r\n       },\r\n            \r\n           formIsValid:false,\r\n           loading:false\r\n\r\n    }\r\n   \r\n   \r\n    OrderHandler=(event)=>{\r\n        event.preventDefault();\r\n        const formData={};\r\n         for(let data in this.state.orderForm){\r\n             formData[data]=this.state.orderForm[data].value\r\n         }\r\n\r\n        \r\n        const orders={\r\n                ingredient:this.props.ingredient,\r\n                price:this.props.price,\r\n                orderData:formData,\r\n                userId:this.props.userId\r\n                \r\n        }\r\n\r\n        this.props.onOrderBurger(this.props.token,orders)\r\n        \r\n    }\r\n\r\n\r\n    checkValidity=(value,rules)=>{\r\n        let isValid=true;\r\n        if(rules.required){\r\n            isValid=value.trim()!==\"\" && isValid;\r\n             }\r\n        if(rules.minLength){\r\n            isValid=value.length >= rules.minLength && isValid;\r\n        }\r\n        if(rules.maxLength){\r\n            isValid=value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler=(event,formElement)=>{\r\n        event.preventDefault();\r\n        \r\n        const updatedOrderForm={...this.state.orderForm};\r\n        const updatedFormElement={...updatedOrderForm[formElement]};\r\n        updatedFormElement.value=event.target.value;\r\n\r\n        updatedFormElement.valid=this.checkValidity(updatedFormElement.value,updatedFormElement.validation);\r\n        updatedFormElement.touched=true;\r\n\r\n        let formIsValid=true\r\n\r\n        for(let identifier in  updatedOrderForm){\r\n            formIsValid=updatedOrderForm[identifier].valid && formIsValid\r\n        }\r\n\r\n        updatedOrderForm[formElement]=updatedFormElement;\r\n        this.setState({orderForm:updatedOrderForm, formIsValid})\r\n    }\r\n\r\n    render(){\r\n\r\n        const fromElementsArray=[];\r\n        for(let key in this.state.orderForm){\r\n            fromElementsArray.push({\r\n                id:key,\r\n                config: this.state.orderForm[key]\r\n            })\r\n        }\r\n        let form=(\r\n            <form onSubmit={this.OrderHandler}>\r\n                   {fromElementsArray.map((formElement)=>(\r\n                       <Input \r\n                            key={formElement.id}\r\n                            elementType={formElement.config.elementType} \r\n                            elementConfig={formElement.config.elementConfig}\r\n                            value={formElement.config.value}\r\n                            invalid={!formElement.config.valid}\r\n                            touched={formElement.config.touched}\r\n                            shouldValidate={formElement.config.validation}\r\n                            changed={()=>this.inputChangedHandler(event,formElement.id)}\r\n                            ></Input>\r\n                   ))}\r\n                    <Button btnType=\"Success\" disabled={!this.state.formIsValid}><b>ORDER</b></Button>\r\n                </form>\r\n        )\r\n        if(this.props.loading){\r\n            form=<Spinner/>\r\n        }   \r\n        return(\r\n\r\n            <div className=\"ContactData\">\r\n                 \r\n                <h1>Please enter your precise address for better service</h1>\r\n                {form}\r\n                \r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst MapStateToProps=state=>{\r\n    return {\r\n        ingredient:state.burgerReducer.ingredient,\r\n        price:state.burgerReducer.totalPrice,\r\n        loading:state.orderReducer.loading,\r\n        token:state.authReducer.token,\r\n        userId:state.authReducer.userId\r\n    }\r\n}\r\nconst MapDispatchToProps =(dispatch)=>{\r\n    return{\r\n        onOrderBurger:(token,orderData)=>dispatch(actions.purchaseBurger(token,orderData))\r\n    }\r\n}\r\n\r\nexport default connect(MapStateToProps,MapDispatchToProps)(withErrorHandler(ContactData,axios));","import React,{Component} from \"react\"\r\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\"\r\nimport ContactData from \"../Checkout/ContactData/ContactData\"\r\nimport {Route,Redirect} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\"\r\nimport \"../../styles/componenets/Checkout.css\"\r\nimport *as action from \"../../store/Actions/index\"\r\n\r\nclass Checkout extends Component{\r\n\r\n    CancelHandler =()=>{\r\n         this.props.history.goBack();\r\n    }\r\n    ContinueHandler =()=>{\r\n        this.props.history.replace(\"/checkout/contact-data\")\r\n    }\r\n render(){\r\n     let summary = <Redirect to=\"/\"/>\r\n     if(this.props.ingredient){\r\n         const purchaseRedirect=this.props.purchased?<Redirect to=\"/\"/>:null;\r\n         summary=(\r\n            <div className=\"Checkout\">\r\n                    {purchaseRedirect}\r\n                    <CheckoutSummary \r\n                        ingredient={this.props.ingredient}\r\n                        CancelHandler={this.CancelHandler}\r\n                        ContinueHandler={this.ContinueHandler}/>\r\n                  \r\n                        <Route\r\n                        path={this.props.match.path + \"/contact-data\"} \r\n                        component={ContactData}/>\r\n                \r\n                   \r\n             </div>\r\n         );\r\n     }\r\n     return(\r\n         <div>\r\n            {summary}\r\n         </div>\r\n       \r\n     )\r\n }\r\n}\r\n\r\nconst MapStateToProps=state=>{\r\n    return{\r\n        ingredient:state.burgerReducer.ingredients,\r\n        props:state.burgerReducer.totalPrice,\r\n        purchased:state.orderReducer.purchased\r\n    }\r\n}\r\n\r\nexport default connect(MapStateToProps) (Checkout);"],"sourceRoot":""}